/*Exercises 5.35â€“5.37 developed a com-
puter-assisted instruction program to help teach an elementary school student multiplication. Mod-
ify the program to allow the user to enter a difficulty level. At a difficulty level of 1, the program
should use only single-digit numbers in the problems; at a difficulty level of 2, numbers as large as
two digits, and so on.*/

/*
 * Augusto Loose Bellinaso
 */
import java.util.Scanner;
import java.security.SecureRandom;

public class CAI4 {
	
	private static final SecureRandom randomNumber = new SecureRandom();
	
	
	//main method
	public static void main(String[] args) {
		//variables
		Scanner input = new Scanner(System.in);
		int computerAnswer; //store the answer friom the random numbers generated by the program
		int userAnswer; //store the answer input by user
		int count = 0; //counting the number of questions
		int correctCount = 0; //to store the number of correct questions
		int choice = 1; //to choose if continues or not
		int difficulty; //to choose the level of difficulty
		
		
		System.out.print("Choose the level of difficulty:\n"
				+ "1 - Single-digit numbers; \n"
				+ "2 - Double-digit numbers; \n"
				+ "3 - Triple-digit numbers.");
		do {
			
			System.out.print("\nEnter the difficulty level: ");
			difficulty = input.nextInt();
			
			while (count <= 10) {

				//calling method to display question
				computerAnswer = questions(difficulty);
				//store user's answer
				userAnswer = input.nextInt();
				count++;
				
				//looping if incorrect answer
				while (userAnswer != computerAnswer) {
					motivationalIncorrect();					
					userAnswer = input.nextInt();
					count++;		
				
					
					if (count == 10) {
						break;
					}
				}//end while
				
				//if correct answer
				if (userAnswer == computerAnswer) {
					motivationalCorrect();
					correctCount++;
				}
				
				if (count == 10) {
					break;
				}
			}//end while	
				
				if (correctCount <= 7) {
					System.out.print("Please ask your teacher for extra help. \n");
				} else {
					System.out.print(" Congratulations, you are ready to go to the next level!\n");
				}
				
				//asking if wanna continue
				System.out.println();
				System.out.print("Enter 1 for next question or 2 to exit: ");
				choice = input.nextInt();
				
							
			
		} while(choice != 2);
		
	}//end main
	
	//method to display the questions
	public static int questions(int difficulty) {
		int number1 = 0;
		int number2 = 0;
		
		switch(difficulty) {
			case 1:
				number1 = 1 + randomNumber.nextInt(10);
				number2 = 1 + randomNumber.nextInt(10);
				break;
			case 2:
				number1 = 1 + randomNumber.nextInt(100);
				number2 = 1 + randomNumber.nextInt(100);
				break;
			case 3:
				number1 = 1 + randomNumber.nextInt(1000);
				number2 = 1 + randomNumber.nextInt(1000);
				break;
		}
		
		System.out.printf("How much is %d times %d? ", number1, number2);
		return number1 * number2;
	}
	
	//motivational
	public static void motivationalCorrect() {
		int message = 1 + randomNumber.nextInt(4);
		switch(message) {
			case 1:
				System.out.println("Very Good!");
				break;
			case 2:
				System.out.println("Excelent!");
				break;
			case 3:
				System.out.println("Nice work!");
				break;
			case 4:
				System.out.println("Keep up the good work!");
				break;
		}//end switch
	}//end method
	
	//motivational for incorrect answers
	public static void motivationalIncorrect() {
		int message = 1 + randomNumber.nextInt(4);
		switch(message) {
		case 1:
			System.out.println("No. Please try again");
			break;
		case 2:
			System.out.println("Wrong. Try once more.");
			break;
		case 3:
			System.out.println("Don't give up!");
			break;
		case 4:
			System.out.println("No. Keep trying.");
			break;
		}//end switch
	}
	
	

}
